
# services:
#   mongo:
#     image: mongo:latest
#     container_name: mongo
#     ports:
#       - "27018:27017"
#     environment:
#       MONGO_INITDB_ROOT_USERNAME: root
#       MONGO_INITDB_ROOT_PASSWORD: example

#   app:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     container_name: go-app
#     ports:
#       - "8080:8080"
#     environment:
#       MONGODB_URL: mongodb://root:example@mongo:27017
#       MONGODB_DATABASE: user_data
#       SECRECT_KEY: 12dat34nguyen
#     depends_on:
#       - mongo



# version: "3.8"

# services:
#   # MongoDB cho User Service
#   mongo-user:
#     image: mongo:latest
#     container_name: mongo-user
#     ports:
#       - "27018:27017"  # MongoDB cho user-service sẽ chạy trên cổng 27018
#     environment:
#       MONGO_INITDB_ROOT_USERNAME: user_service
#       MONGO_INITDB_ROOT_PASSWORD: user_service_pass
#       MONGO_INITDB_DATABASE: user_data  # Database riêng cho user-service
#     volumes:
#       - mongo-user-data:/data/db  # Volume cho MongoDB của user-service

#   # MongoDB cho Product Service
#   mongo-product:
#     image: mongo:latest
#     container_name: mongo-product
#     ports:
#       - "27019:27017"  # MongoDB cho product-service sẽ chạy trên cổng 27019
#     environment:
#       MONGO_INITDB_ROOT_USERNAME: product_service
#       MONGO_INITDB_ROOT_PASSWORD: product_service_pass
#       MONGO_INITDB_DATABASE: product_data  # Database riêng cho product-service
#     volumes:
#       - mongo-product-data:/data/db  # Volume cho MongoDB của product-service

#   # MongoDB cho Cart Service
#   mongo-cart:
#     image: mongo:latest
#     container_name: mongo-cart
#     ports:
#       - "27020:27017"  # MongoDB cho cart-service sẽ chạy trên cổng 27020
#     environment:
#       MONGO_INITDB_ROOT_USERNAME: cart_service
#       MONGO_INITDB_ROOT_PASSWORD: cart_service_pass
#       MONGO_INITDB_DATABASE: cart_data  # Database riêng cho cart-service
#     volumes:
#       - mongo-cart-data:/data/db  # Volume cho MongoDB của cart-service

#   # User Service
#   user-service:
#     build:
#       context: ./user-service
#       dockerfile: Dockerfile
#     container_name: user-service
#     ports:
#       - "8081:8081"
#     environment:
#       MONGODB_URL: mongodb://user_service:user_service_pass@mongo-user:27017  # Kết nối đến MongoDB cho user-service
#       MONGODB_DATABASE: user_data
#       SECRET_KEY: 12dat34nguyen
#     depends_on:
#       - mongo-user

#   # Product Service
#   product-service:
#     build:
#       context: ./product-service
#       dockerfile: Dockerfile
#     container_name: product-service
#     ports:
#       - "8082:8082"
#     environment:
#       MONGODB_URL: mongodb://product_service:product_service_pass@mongo-product:27017  # Kết nối đến MongoDB cho product-service
#       MONGODB_DATABASE: product_data
#       SECRET_KEY: 12dat34nguyen
#     depends_on:
#       - mongo-product

#   # Cart Service
#   cart-service:
#     build:
#       context: ./cart-service
#       dockerfile: Dockerfile
#     container_name: cart-service
#     ports:
#       - "8083:8083"
#     environment:
#       MONGODB_URL: mongodb://cart_service:cart_service_pass@mongo-cart:27017  # Kết nối đến MongoDB cho cart-service
#       MONGODB_DATABASE: cart_data
#       SECRET_KEY: 12dat34nguyen
#     depends_on:
#       - mongo-cart

# volumes:
#   mongo-user-data:  # Lưu trữ dữ liệu của MongoDB cho user-service
#   mongo-product-data:  # Lưu trữ dữ liệu của MongoDB cho product-service
#   mongo-cart-data:  # Lưu trữ dữ liệu của MongoDB cho cart-service




version: "3.8"

services:
  api-gateway:
    build:
      context: .
      dockerfile: ./api-gateway/Dockerfile
      args:
        - SERVICE_NAME=api-gateway
    ports:
      - "8080:8080"
    env_file:
      - ./api-gateway/.env

  auth-service:
    build:
      context: .
      dockerfile: ./auth-service/Dockerfile
      args:
        - SERVICE_NAME=auth-service
    ports:
      - "8081:8081"
    env_file:
      - ./auth-service/.env
    depends_on:
      - mongodb

  product-service:
    build:
      context: .
      dockerfile: ./product-service/Dockerfile
      args:
        - SERVICE_NAME=product-service
    ports:
      - "8082:8082"
      - "8089:8089"
    env_file:
      - ./product-service/.env
    depends_on:
      - mongodb

  cart-service:
    build:
      context: .
      dockerfile: ./cart-service/Dockerfile
      args:
        - SERVICE_NAME=cart-service
    ports:
      - "8083:8083"
      - "8090:8090"
    env_file:
      - ./cart-service/.env
    depends_on:
      - mongodb

  order-service:
    build:
      context: . 
      dockerfile: ./order-service/Dockerfile
      args:
        - SERVICE_NAME=order-service
    ports:
      - "8084:8084"
    env_file:
      - ./order-service/.env
    depends_on:
      - mongodb

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  mongo-express:
    image: mongo-express:latest
    ports:
      - "8085:8081"
    environment:
      - ME_CONFIG_MONGODB_URL=mongodb://mongodb:27017/
    depends_on:
      - mongodb

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

volumes:
  mongodb_data:

networks:
  default:
    driver: bridge
